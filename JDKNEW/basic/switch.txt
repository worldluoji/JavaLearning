switch表达式在 JDK 14 正式发布

1）switch 代码块出现在了赋值运算符的右侧。
2）下一个变化，是一个新的情景操作符，“->”，它是一个箭头标识符。
这个符号使用在 case 语句里，一般化的形式是“case L ->”。这里的 L，就是要匹配的一个或者多个情景。
3）出现了一个新的关键字“yield”。大多数情况下，switch 表达式箭头标识符的右侧是一个数值或者是一个表达式。 
如果需要一个或者多个语句，我们就要使用代码块的形式。
这时候，我们就需要引入一个新的 yield 语句来产生一个值，这个值就成为这个封闭代码块代表的数值。

import java.util.Calendar;

class DaysInMonth {
    public static void main(String[] args) {
        Calendar today = Calendar.getInstance();
        int month = today.get(Calendar.MONTH);
        int year = today.get(Calendar.YEAR);

        int daysInMonth = switch (month) {
            case Calendar.JANUARY,
                 Calendar.MARCH,
                 Calendar.MAY,
                 Calendar.JULY,
                 Calendar.AUGUST,
                 Calendar.OCTOBER,
                 Calendar.DECEMBER -> 31;
            case Calendar.APRIL,
                 Calendar.JUNE,
                 Calendar.SEPTEMBER,
                 Calendar.NOVEMBER -> 30;
            case Calendar.FEBRUARY -> {
                if (((year % 4 == 0) && !(year % 100 == 0))
                        || (year % 400 == 0)) {
                    yield 29;
                } else {
                    yield 28;
                }
            }
            default -> throw new RuntimeException(
                    "Calendar in JDK does not work");
        };

        System.out.println(
                "There are " + daysInMonth + " days in this month.");
    }
}
有没有 break 语句，使用箭头标识符的 switch 语句都不会顺次执行下面的操作（fall-through）

几个重要结论：
break 语句只能出现在 switch 语句里，不能出现在 switch 表达式里；
yield 语句只能出现在 switch 表达式里，不能出现在 switch 语句里；
switch 表达式需要穷举出所有的情景，而 switch 语句不需要情景穷举；
使用冒号标识符的 swtich 形式，支持情景间的 fall-through；而使用箭头标识符的 swtich 形式不支持 fall-through；
使用箭头标识符的 swtich 形式，一个 case 语句支持多个情景；而使用冒号标识符的 swtich 形式不支持多情景的 case 语句。