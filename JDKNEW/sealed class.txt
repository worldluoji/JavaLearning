JDK17正式发布封闭类。
使用 sealed 类修饰符，我们可以把形状这个类声明为封闭类。
下面的这个例子中，Shape 是一个封闭类，可以扩展它的子类只有两个，分别为 Circle 和 Square。
package co.ivi.jus.sealed.modern;

public abstract sealed class Shape permits Circle, Square {
    public final String id;

    public Shape(String id) {
        this.id = id;
    }

    public abstract double area();
}

许可类必须和封闭类处于同一模块（module）或者包空间（package）里，也就是说，在编译的时候，封闭类必须可以访问它的许可类；
许可类必须是封闭类的直接扩展类；
许可类必须声明是否继续保持封闭：
许可类可以声明为终极类（final），从而关闭扩展性；
许可类可以声明为封闭类（sealed），从而延续受限制的扩展性；
许可类可以声明为解封类（non-sealed）, 从而支持不受限制的扩展性。