1.  f是一个InputStream，那么BufferedReader in = new BufferedReader(new InputStreamReader(f)), 关闭时只需要in.close()，关闭最外层。
因为Java io包里的stream和reader，都是用的装饰器模式。
可以直接阅读BufferedReader源码。

2. getDeclaredFileds和getFields的区别：
getFields获取的是自身和继承而来的public属性，而getDeclaredFileds获取的是当前类的所有属性，包括private, protected, default, public.

3. a.isAssignableFrom(b)
针对两个Class类型实例a和b, 如果a对应的类信息是b对应类信息的父类或接口，或者a对应类信息和b对应类信息为同一个类或接口，则为true,否则为flase.
比如List<String> list = new ArrayList<>()
那么List.class.isAssignableFrom(list)为true

4. 二维数组排序参考：
class Solution {
    public boolean canAttendMeetings(int[][] intervals) {
        int r = intervals.length;
        if (r == 0) {
            return true;           
        }

        Arrays.sort(intervals, (int[] o1, int[] o2) -> o1[0] - o2[0]);

        for (int i = 1; i < r; i++) {
            if ( (intervals[i][0] < intervals[i-1][1]) && (intervals[i][0] >= intervals[i-1][0]) ) {
                return false;
            }
        }

        return true;
    }
}

5. JDK8数组和List相互转换
数组转化为List
 String[] arrays = new String[]{"a", "b", "c"};
 List<String> listStrings = Stream.of(arrays).collect(Collectors.toList())
这是建议的方式。Arrays.asList有坑。

List转化为数组：
1）. 使用Stream:
String[] ss = listStrings.stream().toArray(String[]::new);
这是推荐的方式。

2）. 使用List中的toArray()方法
String[] sss = listStrings.toArray(new String[listStrings.size()]);
